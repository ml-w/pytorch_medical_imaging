[General]
use_cuda        = True
run_mode        = train
run_type        = rAIdiologist
plot_tb         = True
fold_code       = B00
log_dir         = ./Backup/Log/BM_Test_${fold_code}-v${version}.log
version         = v2.0-sv3
keep_log        = yes
;force_train_data= No

# Controlled in main.py
[Checkpoint]
cp_save_dir = ./Backup/BM_LargeStudy_rAId_${General:fold_code}-v${General:version}.pt
cp_load_dir = ./Backup/BM_LargeStudy_rAId_${General:fold_code}-v${General:version}.pt

# Controlled in main.py
[Network]
network_type = rAIdiologist(1)

# Controlled in solver/inferencer
[RunParams]
batch_size          = 12

# Controlled in main.py
[Data]
target_dir          = ./NPC_Segmentation/60.Large-Study/v1-All-Data/v2-datasheet.csv
;mask_dir            = ./NPC_Segmentation/60.Large-Study/v1-All-Data/Normalized_2/T2WFS_TRA/00.HuangMask
output_dir          = ./NPC_Segmentation/98.Output/BM_test_${General:fold_code}-v${General:version}
input_dir           = ./NPC_Segmentation/60.Large-Study/v1-All-Data/Normalized_2/T2WFS_TRA/01.NyulNormalized
validation_dir      = ./NPC_Segmentation/60.Large-Study/v1-All-Data/Normalized_2/T2WFS_TRA/01.NyulNormalized
validation_gt_dir   = ./NPC_Segmentation/60.Large-Study/v1-All-Data/v2-datasheet.csv

# Data loading filter, controlled by PMI_data_loader
[Filters]
re_suffix           = (.*)
id_list 		    = ./NPC_Segmentation/99.Testing/NPC_BM_LargeStudy/v3-3fold/${General:fold_code}.ini
validation_re_suffix= (.*)
validation_id_list 	= ./NPC_Segmentation/99.Testing/NPC_BM_LargeStudy/v3-3fold/Validation.txt

# Controlled in PMI_data_loader
[LoaderParams]
PMI_datatype_name   = PMIImageFeaturePair
data_types          = float-uint8
augmentation        = ./NPC_Segmentation/60.Large-Study/v1-All-Data/v1_rAIdiologist_transform.yaml
idGlobber           = ^[a-zA-Z]{0,3}[0-9]+
queue_kwargs        = {'num_workers': 16}

[SolverParams]
unpack_keys_forward   = ['input'    , 'gt']
unpack_keys_inference = ['input']
gt_keys               = ['gt']
sigmoid_params        = {'delay'    : 5    , 'stretch' : 1  , 'cap': 0.2}
lossfunc_in_colname   = is_malignant
inf_samples_per_vol   = 1
optimizer_type        = Adam
initial_weight        = 1
learning_rate         = 1E-5
momentum              = 0.95
num_of_epochs         = 150
decay_rate_LR         = 0.99
decay_on_plateau      = False
rAI_pretrained_swran  = ./Backup/BM_rAIPretrain_${General:fold_code}-v${General:version}.pt
lr_scheduler          = DecayCAWR
lr_scheduler_args     = [0.98, 10]
lr_scheduler_kwargs   = {'eta_min': 1E-6, 'T_mult': 1}

