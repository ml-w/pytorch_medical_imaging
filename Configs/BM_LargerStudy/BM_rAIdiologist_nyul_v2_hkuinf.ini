[General]
use_cuda        = True
run_mode        = train
run_type        = rAIdiologist
plot_tb         = True
fold_code       = B00
log_dir         = ./Backup/Log/BM_Test_${fold_code}-v${version}.log
version         = v2.0-sv3
keep_log        = yes
;force_train_data= No

# Controlled in main.py
[Checkpoint]
cp_save_dir = ./Backup/BM_LargeStudy_rAId_${General:fold_code}-v${General:version}.pt
cp_load_dir = ./Backup/BM_LargeStudy_rAId_${General:fold_code}-v${General:version}.pt

# Controlled in main.py
[Network]
network_type = rAIdiologist(1)

# Controlled in solver/inferencer
[RunParams]
batch_size          = 12

# Controlled in main.py
[Data]
;target_dir          = ./NPC_Segmentation/60.Large-Study/v1-All-Data/v2-datasheet.csv
;mask_dir            = ./NPC_Segmentation/60.Large-Study/v1-All-Data/Normalized_2/T2WFS_TRA/00.HuangMask
output_dir          = ./NPC_Segmentation/98.Output/BM_test_${General:fold_code}-v${General:version}_HKU
input_dir           = ./NPC_Segmentation/60.Large-Study/HKU_data/NyulNormalizer

# Data loading filter, controlled by pmi_data_loader
[Filters]
re_suffix           = (.*)

# Controlled in pmi_data_loader
[LoaderParams]
PMI_datatype_name   = PMIImageFeaturePair
data_types          = float-uint8
augmentation        = ./NPC_Segmentation/60.Large-Study/v1-All-Data/v1_rAIdiologist_transform.yaml
idGlobber           = ^[a-zA-Z0-9]+
queue_kwargs        = {'num_workers': 16}

[SolverParams]
unpack_keys_forward = ['input', 'gt']
unpack_keys_inference = ['input']
gt_keys             = ['gt']
lossfunc_in_colname = is_malignant
inf_samples_per_vol = 1

