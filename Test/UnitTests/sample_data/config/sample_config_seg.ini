[General]
use_cuda        = True
run_mode        = train
run_type        = Segmentation
plot_tb         = True
fold_code       = B00
log_dir         = ./Backup/Log/sample_${fold_code}-v${version}.log
version         = 1.0
;force_train_data= No

# Controlled in main.py
[Checkpoint]
cp_save_dir = ./sample_lesion_only_${General:fold_code}_VNet-v${General:version}.pt
cp_load_dir = ./sample_lesion_only_${General:fold_code}_VNet-v${General:version}.pt

# Controlled in main.py
[Network]
network_type = VNet(1, 2)

# Controlled in solver/inferencer
[RunParams]
batch_size          = 4


# Controlled in main.py
[Data]
target_dir           = ./sample_data/seg
prob_map_dir         = ./sample_data/seg
output_dir           = ./sample_data/output
input_dir            = ./sample_data/img
validation_input_dir = ./sample_data/img
validation_gt_dir    = ./sample_data/seg

# Data loading filter, controlled by PMI_data_loader
[Filters]
re_suffix            = (.*)
validation_re_suffix = (.*)
validation_id_list   = ./sample_data/config/sample_id_setting.txt

# Controlled in PMI_data_loader
[LoaderParams]
PMI_datatype_name   = PMIImageDataLoader
data_types          = float-uint8
idGlobber           = ^[\w_\d]+
patch_size          = [64, 64, 64]
sampler             = weighted
queue_kwargs        = {'max_length': 200, 'samples_per_volume':25}

[SolverParams]
unpack_keys_forward = ['input', 'gt']
unpack_keys_inference = ['input']
gt_keys             = ['gt']
sigmoid_params      = {'delay': 5, 'stretch':1, 'cap': 0.2}
class_weights       = [0.05, 1.0]
optimizer_type      = Adam
initial_weight      = 1
learning_rate       = 1E-3
momentum            = 0.95
num_of_epochs       = 150
decay_rate_lr       = 0.99
decay_on_plateau    = False
lr_scheduler_dict   = {'cooldown':10, 'patience':15}
early_stop          = {'method': 'validation_loss_reference'}
; For validation
inf_samples_per_vol = 80

