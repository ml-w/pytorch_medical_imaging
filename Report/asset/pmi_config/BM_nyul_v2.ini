[General]
use_cuda        = True
run_mode        = train
run_type        = BinaryClassification
plot_tb         = True
fold_code       = B00
log_dir         = ./Backup/Log/BM_Test_${fold_code}-v${version}.log
version         = v2.0-sv3
;force_train_data= No

# Controlled in main.py
[Checkpoint]
cp_load_dir = ./asset/trained_states/deeplearning/NPC_BM-vv2.0-sv3.pt

# Controlled in main.py
[Network]
network_type = SlicewiseAttentionRAN(1, 1)

# Controlled in solver/inferencer
[RunParams]
batch_size          = 8
initial_weight      = 1
learning_rate       = 1E-3
momentum            = 0.95
num_of_epochs       = 150
decay_rate_LR       = 0.99
decay_on_plateau    = False
lr_scheduler_dict   = {'cooldown':15, 'patience':50}

# Controlled in main.py
[Data]
target_dir          = ""
mask_dir            = ""
output_dir          = ""
input_dir           = ""

# Data loading filter, controlled by PMI_data_loader
[Filters]
re_suffix           = (.*)
id_list 		    = ./NPC_Segmentation/99.Testing/NPC_BM_LargeStudy/v3-3fold/${General:fold_code}.ini
validation_re_suffix= (.*)
validation_id_list 	= ./NPC_Segmentation/99.Testing/NPC_BM_LargeStudy/v3-3fold/Validation.txt

# Controlled in PMI_data_loader
[LoaderParams]
PMI_datatype_name   = PMIImageFeaturePair
data_types          = float-uint8
augmentation        = ./NPC_Segmentation/60.Large-Study/v1-All-Data/v1_swran_transform.yaml
idGlobber           = ^[a-zA-Z]{0,3}[0-9]+

[SolverParams]
unpack_keys_forward = ['input', 'gt']
unpack_keys_inference = ['input']
gt_keys             = ['gt']
lossfunc_in_colname = is_malignant
sigmoid_params      = {'delay': 5, 'stretch':1, 'cap': 0.2}
; If probmap available, use weighted sampler for inference.
inf_samples_per_vol = 1
;class [null, thickening, cyst]
;class_weights       = [0.05, 1.0, 0.7]
optimizer_type      = Adam

